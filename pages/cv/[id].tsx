import type { NextPage } from "next";
import { InferGetServerSidePropsType, GetServerSideProps } from "next";

import Head from "next/head";
import { Header } from "components/Header";

import { getCV } from "shared/queries";
import { CV } from "shared/types";
import { parseCvInfo } from "shared/utils";
import dynamic from "next/dynamic";

type ServerSideProps = {
  cv: CV;
};
export const getServerSideProps: GetServerSideProps<ServerSideProps> = async (
  context
) => {
  const params = context.params;
  const id = params?.id;

  const { data: responseBody } = await getCV(id as string);
  return {
    props: {
      cv: responseBody.data,
    }, // will be passed to the page component as props
  };
};

const PDFDocument = dynamic(() => import("components/PDF"), { ssr: false });

const CVPage: NextPage<ServerSideProps> = ({
  cv,
}: InferGetServerSidePropsType<typeof getServerSideProps>) => {
  const cvInfo = parseCvInfo(cv.cvBody);
  return (
    <>
      <Head>
        <title>CV</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header></Header>

      {cvInfo ? (
        <PDFDocument info={cvInfo} />
      ) : (
        <div>Not enough information to generate PDF</div>
      )}
    </>
  );
};

export default CVPage;
