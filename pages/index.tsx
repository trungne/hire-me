import type { NextPage } from "next";
import Head from "next/head";
import { useAtom } from "jotai";
import { useEffect, useState } from "react";
import {
  AppShell,
  Header,
  Text,
  MediaQuery,
  Burger,
  useMantineTheme,
  Tabs,
} from "@mantine/core";
import { getAuth, onAuthStateChanged } from "firebase/auth";
import { GetStaticProps } from "next";

import SideBar from "components/SideBar";
import Footer from "components/Footer";
import { navBarAtom, writeIdTokenAtom } from "shared/atoms";
import { NavCategory, NavCategoryValueType } from "shared/types";
import TabContent from "components/TabContent/TabContent";
import TemplateContent from "components/TabContent/TemplateContent";
import ProfileContent from "components/TabContent/ProfileContent";
import { CURRENT_NAV_BAR_LOCAL_STORAGE, NAV_BAR } from "shared/constants";

const auth = getAuth();
const Home: NextPage = () => {
  const theme = useMantineTheme();
  const [opened, setOpened] = useState(false);
  const [_, setIdToken] = useAtom(writeIdTokenAtom);
  // const { data, isLoading } = useQuery("CVs", getCVs);

  const [navBar, setNavBar] = useAtom(navBarAtom);
  console.log("navBar", navBar);
  useEffect(() => {
    const persistentNavBar = localStorage.getItem(
      CURRENT_NAV_BAR_LOCAL_STORAGE
    );
    if (
      persistentNavBar &&
      Object.values(NavCategory).includes(
        persistentNavBar as NavCategoryValueType
      )
    ) {
      setNavBar(persistentNavBar as NavCategoryValueType);
      console.log("persistentNavBar", persistentNavBar);
      console.log("current navBar", persistentNavBar);
    }
  }, []);
  useEffect(() => {
    const subscribe = onAuthStateChanged(auth, async (user) => {
      if (user) {
        // User is signed in, see docs for a list of available properties
        // https://firebase.google.com/docs/reference/js/firebase.User
        setIdToken(await user.getIdToken());
        // ...
      } else {
        // User is signed out
        // ...
        setIdToken("");
      }
    });
    return () => {
      subscribe();
    };
  }, []);

  return (
    <>
      <Head>
        <title>Hire me</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Tabs
        classNames={{
          tabLabel: "font-['Montserrat']",
        }}
        orientation="vertical"
        value={navBar}
        onTabChange={(value) => {
          if (value) {
            console.log("set nav bar on tab change", value);
            setNavBar(value as typeof NavCategory[keyof typeof NavCategory]);
          }
        }}
      >
        <AppShell
          styles={{
            main: {
              background:
                theme.colorScheme === "dark"
                  ? theme.colors.dark[8]
                  : theme.colors.gray[0],
            },
          }}
          navbarOffsetBreakpoint="sm"
          asideOffsetBreakpoint="sm"
          navbar={<SideBar isOpened={opened} />}
          footer={<Footer />}
          header={
            <Header height={{ base: 50, md: 70 }} p="md">
              <div
                style={{
                  display: "flex",
                  alignItems: "center",
                  height: "100%",
                }}
              >
                <MediaQuery largerThan="sm" styles={{ display: "none" }}>
                  <Burger
                    opened={opened}
                    onClick={() => setOpened((o) => !o)}
                    size="sm"
                    color={theme.colors.gray[6]}
                    mr="xl"
                  />
                </MediaQuery>

                <Text>Application header</Text>
              </div>
            </Header>
          }
        >
          <Tabs.Panel value={NavCategory.TEMPLATE}>
            <TemplateContent />
          </Tabs.Panel>
          <Tabs.Panel value={NavCategory.PROFILE}>
            <ProfileContent />
          </Tabs.Panel>
          <Tabs.Panel value={NavCategory.EDUCATION}>Education</Tabs.Panel>
          <Tabs.Panel value={NavCategory.WORK}>Work</Tabs.Panel>
          <Tabs.Panel value={NavCategory.SKILLS}>Skills</Tabs.Panel>
          <Tabs.Panel value={NavCategory.PROJECTS}>Projects</Tabs.Panel>
          <Tabs.Panel value={NavCategory.AWARDS}>Awards</Tabs.Panel>
        </AppShell>
      </Tabs>
    </>
  );
};

export default Home;
